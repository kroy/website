---
import { ArrowRightIcon, DownloadIcon, ExternalLinkIcon } from '@radix-ui/react-icons';

interface Props {
	title: string;
	body?: string;
	href?: string;
	icon?: "ArrowRight" | "Download" | "ExternalLink"
	download?: string;
}

const { href, title, body, icon, download } = Astro.props;

let Icon = ArrowRightIcon;

switch (icon) {
	case "ArrowRight":
		Icon = ArrowRightIcon
		break;
	case "Download":
		Icon = DownloadIcon
		break;
	case "ExternalLink":
		Icon = ExternalLinkIcon
		break
	default:
		break;
}
---

<a class="no-underline text-text" href={href} {download}>
	<div class="flex flex-col justify-center items-center border-accent border-[0.5px] hover:shadow-solid shadow-pop-light h-16 rounded-md p-2 relative">
		<h2>
			{title}
		</h2>
		<p>
			{body}
		</p>
		<div class="absolute bottom-0 right-0 p-1">
			<Icon />
		</div>
	</div>
</a>
<!-- <style>
	.link-card {
		list-style: none;
		display: flex;
		padding: 1px;
		background-image: none;
		background-size: 400%;
		border-radius: 7px;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
	}
	.link-card > a {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: calc(1.5rem - 1px);
		border-radius: 8px;
		opacity: 0.8;
	}
	h2 {
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
	}
	.link-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent-light));
	}
</style> -->
